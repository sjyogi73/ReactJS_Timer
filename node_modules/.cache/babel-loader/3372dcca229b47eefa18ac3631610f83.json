{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yoges\\\\OneDrive\\\\Desktop\\\\Reacyt\\\\Timer_HooksConcept\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Container } from 'react-bootstrap';\nimport Card from 'react-bootstrap/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      minutes: 3,\n      seconds: 0\n    };\n  }\n\n  componentDidMount() {\n    this.myInterval = setInterval(() => {\n      const {\n        seconds,\n        minutes\n      } = this.state;\n\n      if (seconds > 0) {\n        this.setState(_ref => {\n          let {\n            seconds\n          } = _ref;\n          return {\n            seconds: seconds - 1\n          };\n        });\n      }\n\n      if (seconds === 0) {\n        if (minutes === 0) {\n          clearInterval(this.myInterval);\n        } else {\n          this.setState(_ref2 => {\n            let {\n              minutes\n            } = _ref2;\n            return {\n              minutes: minutes - 1,\n              seconds: 59\n            };\n          });\n        }\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.myInterval);\n  }\n\n  render() {\n    const {\n      minutes,\n      seconds\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        margin: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: '18rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [minutes === 0 && seconds === 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Busted!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 35\n            }, this) : /*#__PURE__*/_jsxDEV(Card.Title, {\n              children: [\"Time Remaining: \", minutes, \":\", seconds < 10 ? `0${seconds}` : seconds]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n              className: \"mb-2 text-muted\",\n              children: \"React Timer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: \"This Component Maked By Class Component & componentDidMount &componentWillUnmount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Link, {\n            href: \"#\",\n            children: \"Card Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Link, {\n            href: \"#\",\n            children: \"Another Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/yoges/OneDrive/Desktop/Reacyt/Timer_HooksConcept/src/App.js"],"names":["React","Component","Container","Card","App","state","minutes","seconds","componentDidMount","myInterval","setInterval","setState","clearInterval","componentWillUnmount","render","margin","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACxBI,KADwB,GAChB;AACJC,MAAAA,OAAO,EAAE,CADL;AAEJC,MAAAA,OAAO,EAAE;AAFL,KADgB;AAAA;;AAMxBC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,UAAL,GAAkBC,WAAW,CAAC,MAAM;AAChC,YAAM;AAAEH,QAAAA,OAAF;AAAWD,QAAAA;AAAX,UAAuB,KAAKD,KAAlC;;AAEA,UAAIE,OAAO,GAAG,CAAd,EAAiB;AACb,aAAKI,QAAL,CAAc;AAAA,cAAC;AAAEJ,YAAAA;AAAF,WAAD;AAAA,iBAAkB;AAC5BA,YAAAA,OAAO,EAAEA,OAAO,GAAG;AADS,WAAlB;AAAA,SAAd;AAGH;;AACD,UAAIA,OAAO,KAAK,CAAhB,EAAmB;AACf,YAAID,OAAO,KAAK,CAAhB,EAAmB;AACfM,UAAAA,aAAa,CAAC,KAAKH,UAAN,CAAb;AACH,SAFD,MAEO;AACH,eAAKE,QAAL,CAAc;AAAA,gBAAC;AAAEL,cAAAA;AAAF,aAAD;AAAA,mBAAkB;AAC5BA,cAAAA,OAAO,EAAEA,OAAO,GAAG,CADS;AAE5BC,cAAAA,OAAO,EAAE;AAFmB,aAAlB;AAAA,WAAd;AAIH;AACJ;AACJ,KAlB4B,EAkB1B,IAlB0B,CAA7B;AAmBH;;AAEDM,EAAAA,oBAAoB,GAAG;AACnBD,IAAAA,aAAa,CAAC,KAAKH,UAAN,CAAb;AACH;;AAEDK,EAAAA,MAAM,GAAG;AACL,UAAM;AAAER,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAuB,KAAKF,KAAlC;AACA,wBACI,QAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAAEU,QAAAA,MAAM,EAAE;AAAV,OAAlB;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAA,+BACI,QAAC,IAAD,CAAM,IAAN;AAAA,kCACI;AAAA,uBACKV,OAAO,KAAK,CAAZ,IAAiBC,OAAO,KAAK,CAA7B,gBACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADL,gBAEK,QAAC,IAAD,CAAM,KAAN;AAAA,6CAA6BD,OAA7B,OAAuCC,OAAO,GAAG,EAAV,GAAgB,IAAGA,OAAQ,EAA3B,GAA+BA,OAAtE;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHV,eAKI,QAAC,IAAD,CAAM,QAAN;AAAe,cAAA,SAAS,EAAC,iBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAUI,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAcI,QAAC,IAAD,CAAM,IAAN;AAAW,YAAA,IAAI,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdJ,eAeI,QAAC,IAAD,CAAM,IAAN;AAAW,YAAA,IAAI,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAuBH;;AAzDuB;;AA2D5B,eAAeH,GAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        minutes: 3,\r\n        seconds: 0,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.myInterval = setInterval(() => {\r\n            const { seconds, minutes } = this.state\r\n\r\n            if (seconds > 0) {\r\n                this.setState(({ seconds }) => ({\r\n                    seconds: seconds - 1\r\n                }))\r\n            }\r\n            if (seconds === 0) {\r\n                if (minutes === 0) {\r\n                    clearInterval(this.myInterval)\r\n                } else {\r\n                    this.setState(({ minutes }) => ({\r\n                        minutes: minutes - 1,\r\n                        seconds: 59\r\n                    }))\r\n                }\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }\r\n\r\n    render() {\r\n        const { minutes, seconds } = this.state\r\n        return (\r\n            <Container style={{ margin: \"auto\" }}>\r\n                <Card style={{ width: '18rem' }}>\r\n                    <Card.Body>\r\n                        <div>\r\n                            {minutes === 0 && seconds === 0\r\n                                ? <h1>Busted!</h1>\r\n                                : <Card.Title>Time Remaining: {minutes}:{seconds < 10 ? `0${seconds}` : seconds}</Card.Title>\r\n                            }\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">React Timer</Card.Subtitle>\r\n                        </div>\r\n\r\n\r\n                        <Card.Text>\r\n                            This Component Maked By Class Component \r\n                            & componentDidMount &componentWillUnmount\r\n                        </Card.Text>\r\n                        <Card.Link href=\"#\">Card Link</Card.Link>\r\n                        <Card.Link href=\"#\">Another Link</Card.Link>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nexport default App;"]},"metadata":{},"sourceType":"module"}